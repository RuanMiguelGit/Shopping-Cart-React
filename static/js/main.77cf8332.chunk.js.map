{"version":3,"sources":["images/shoppingCartIcon.png","components/ShoppingCart.js","services/api.js","pages/ResultCard.js","pages/SearchResult.js","components/Search.js","components/Categories.js","components/Loading.js","pages/Home.js","pages/ProductsDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ShoppingCart","state","amount","cart","props","location","addup","bind","adddown","index","items","this","quantity","splice","setState","prevState","length","data-testid","map","product","key","src","thumbnail","alt","title","type","onClick","React","Component","a","fetch","data","json","getProductsFromCategoryAndQuery","categoryId","query","URL","ResultCard","addProduct","to","pathname","id","price","SearchResult","queryResult","search","defaultProps","Search","handleChange","event","target","value","onSearch","handleQuery","htmlFor","onChange","shoppingCartIcon","className","Categories","categories","onSelectedCategorie","category","name","Loading","Home","loading","categoriesfull","selectedCategorie","api","then","results","ProductsDetails","App","path","component","exact","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77cf8332.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shoppingCartIcon.c35c7dea.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShoppingCart extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      amount: 1,\n      cart: this.props.location.cart\n    }\n    this.addup = this.addup.bind(this)\n    this.adddown = this.adddown.bind(this)\n\n  }\n\n  addup(cart, index) { // index will be the key value \n    const items = this.state.cart;\n    items.quantity += 1;\n    items.splice(index, 1, items);\n    this.setState({\n      amount: items\n    });\n\n  }\n\n\n  adddown() {\n    this.setState(prevState => {\n      return {\n        amount: prevState.amount - 1\n      }\n    })\n  }\n\n  render() {\n    const { location: { cart } } = this.props;\n    const { amount } = this.state\n    if (cart.length <= 0) {\n      return (<p data-testid=\"shopping-cart-empty-message\">Seu carrinho est√° vazio</p>\n      );\n    }\n    return (\n      <div>\n        <div>\n\n          {cart.map((product, index) => (\n            <div key={index}>\n              <img src={product.thumbnail} alt={product.title} />\n              <h3 data-testid=\"shopping-cart-product-name\">{product.title}</h3>\n              <button type='button' onClick={this.addup(amount)} />\n              <p data-testid=\"shopping-cart-product-quantity\">{amount}</p>\n              <button type='button' onClick={this.adddown(amount)} />\n            </div>\n          ))}\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    cart: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default ShoppingCart;\n","export async function getCategories() {\n  const URL = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const data = await fetch(URL);\n  const json = await data.json();\n  return json;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const URL = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const data = await fetch(URL);\n  const json = await data.json();\n  return json;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ResultCard extends React.Component {\n  render() {\n    const { product, addProduct } = this.props;\n\n    return (\n      <section>\n        <Link\n          to={ {\n            pathname: `/products-details/${product.id}`,\n            state: {\n              product,\n            },\n          } }\n          data-testid=\"product-detail-link\"\n        >\n          <div data-testid=\"product\">\n            <h1>{product.title}</h1>\n            <img src={ product.thumbnail } alt=\"Product pic \" />\n            <p>{product.price}</p>\n          </div>\n        </Link>\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ () => addProduct(product) }\n        >\n          Adicionar ao carrinho\n        </button>\n      </section>\n    );\n  }\n}\n\nResultCard.propTypes = {\n  product: PropTypes.objectOf(Object).isRequired,\n  addProduct: PropTypes.func.isRequired,\n};\n\nexport default ResultCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultCard from './ResultCard';\n\nclass SearchResult extends React.Component {\n  render() {\n    const { queryResult, search, addProduct } = this.props;\n\n    if (search === false) {\n      return (\n        <div data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </div>);\n    }\n    if (queryResult.length === 0) return <div>Nenhum produto foi encontrado</div>;\n    return (\n      <div>\n        {\n          queryResult.map((product) => (\n            <ResultCard\n              key={ product.id }\n              product={ product }\n              addProduct={ addProduct }\n              addup ={this.addup}\n              adddown = {this.adddown}\n            />))\n        }\n      </div>\n    );\n  }\n}\n\nSearchResult.defaultProps = {\n  queryResult: [],\n};\n\nSearchResult.propTypes = {\n  queryResult: PropTypes.arrayOf(Array),\n};\n\nSearchResult.propTypes = {\n  search: PropTypes.bool.isRequired,\n};\n\nSearchResult.propTypes = {\n  addProduct: PropTypes.func.isRequired,\n};\n\nexport default SearchResult;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport SearchResult from '../pages/SearchResult';\nimport shoppingCartIcon from '../images/shoppingCartIcon.png';\nimport './Components.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: '',\n      cart: [],\n      // ATUALIZA O VALOR A CADA DIGITA√á√ÉO NO INPUT\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.addProduct = this.addProduct.bind(this);\n\n\n\n  }\n\n  handleChange(event) {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n \n  addProduct(queryResult) {\n    const { cart, } = this.state;\n    this.setState({\n      cart: [...cart,  queryResult,],\n    });\n  }\n\n  render() {\n    const { query, cart,} = this.state;\n    const { onSearch, search, handleQuery, queryResult } = this.props;\n\n    return (\n      <div>\n        <label htmlFor=\"query-input\">\n          <input\n            id=\"query-input\"\n            data-testid=\"query-input\"\n            type=\"text\"\n            value={ query }\n            onChange={ this.handleChange }\n          />\n\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ (event) => { handleQuery(query); onSearch(event); } }\n          >\n            Pesquisar\n          </button>\n        </label>\n\n        <Link\n          to={ { pathname: '/shopping-cart/', cart,  } }\n          data-testid=\"shopping-cart-button\"\n        >\n          <img src={ shoppingCartIcon } alt=\"shopping-cart\" className=\"shopping-cart\" />\n        </Link>\n\n        <SearchResult\n          queryResult={ queryResult }\n          search={ search }\n          addProduct={ this.addProduct }\n          addup ={this.addup}\n          adddown = {this.adddown}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  search: PropTypes.bool.isRequired,\n  handleQuery: PropTypes.func.isRequired,\n  queryResult: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Categories extends React.Component {\n  render() {\n    const { categories, onSelectedCategorie } = this.props;\n\n    return (\n      <div>\n        <ul>\n          {categories.map((category) => (\n            <button\n              key={ category.id }\n              type=\"button\"\n              onClick={ (event) => { onSelectedCategorie(event); } }\n              value={ category }\n              id={ category.id }\n              data-testid=\"category\"\n            >\n              {category.name}\n            </button>\n          ))}\n        </ul>\n      </div>);\n  }\n}\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  onSelectedCategorie: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">Carregando...</div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport * as api from '../services/api';\nimport Search from '../components/Search';\nimport Categories from '../components/Categories';\nimport Loading from '../components/Loading';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.onSelectedCategorie = this.onSelectedCategorie.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      query: '',\n      loading: false,\n      categoriesfull: [],\n      selectedCategorie: '',\n      queryResult: [],\n      search: false,\n    };\n  }\n\n  componentDidMount() {\n    api.getCategories().then((categories) => {\n      this.setState({\n        categoriesfull: categories,\n      });\n    });\n  }\n\n  handleQuery(query) {\n    this.setState({\n      query,\n    });\n  }\n\n  async onSearch() {\n    const { selectedCategorie } = this.state;\n\n    this.setState(\n      { loading: true },\n      async () => {\n        const { query } = this.state;\n        const queryResult = await\n        api.getProductsFromCategoryAndQuery(selectedCategorie, query);\n        this.setState({\n          queryResult: queryResult.results,\n          search: true,\n          loading: false,\n        });\n      },\n    );\n  }\n\n  onSelectedCategorie(event) {\n    this.setState({\n      selectedCategorie: event.target.id,\n    }, () => this.onSearch(event));\n  }\n\n  render() {\n    const { loading, search } = this.state;\n    const { queryResult, categoriesfull } = this.state;\n    if (loading) return <Loading />;\n    return (\n      <div>\n        <Search\n          queryResult={ queryResult }\n          search={ search }\n          handleQuery={ this.handleQuery }\n          onSearch={ this.onSearch }\n        />\n        <Categories\n          onSearch={ this.onSearch }\n          categories={ categoriesfull }\n          onSelectedCategorie={ this.onSelectedCategorie }\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shoppingCartIcon from '../images/shoppingCartIcon.png';\n\nclass ProductsDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cart: [],\n    };\n\n    this.addProduct = this.addProduct.bind(this);\n  }\n\n  addProduct(queryResult) {\n    const { cart } = this.state;\n    this.setState({\n      cart: [...cart, queryResult],\n    });\n  }\n\n  render() {\n    const { cart } = this.state;\n    const { location: { state: { product } } } = this.props;\n    const { title, price, thumbnail } = product;\n\n    return (\n      <div>\n        <Link\n          to={ { pathname: '/shopping-cart/', cart } }\n          data-testid=\"shopping-cart-button\"\n        >\n          <img src={ shoppingCartIcon } alt=\"shopping-cart\" className=\"shopping-cart\" />\n        </Link>\n        <h1 data-testid=\"product-detail-name\">{ title }</h1>\n        <img src={ thumbnail } alt=\"Product Pic\" />\n        <p>{ price }</p>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ () => this.addProduct(product) }\n        >\n          Adicionar ao carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductsDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n      }).isRequired }).isRequired,\n  }).isRequired,\n\n};\n\nexport default ProductsDetails;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ShoppingCart from './components/ShoppingCart';\nimport Home from './pages/Home';\nimport ProductsDetails from './pages/ProductsDetails';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/shopping-cart\" component={ ShoppingCart } />\n        <Route exact path=\"/\" component={ Home } />\n        <Route\n          path=\"/products-details/:id\"\n          render={ (props) => <ProductsDetails { ...props } /> }\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}